name: Build All PDFs

# The workflow is triggered by pull request, push to main, and manual dispatch.
on:
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'Tag as a pre-release?'
        required: false
        type: boolean
        default: true
      draft:
        description: 'Create release as a draft?'
        required: false
        type: boolean
        default: false
  pull_request:
  push:
    branches:
      - master
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    # Step 2: Pull the latest RISC-V Docs container image
    - name: Pull Container
      run: docker pull riscvintl/riscv-docs-base-container-image:latest

    # Step 3: Build Files
    - name: Build Files
      run: cd ./docs && make

    # Step 4: Upload the built PDF files as independent artifacts
    - name: Upload RISC-V-Trace-Control-Interface PDF
      uses: actions/upload-artifact@v3
      with:
        name: RISC-V-Trace-Control-Interface
        path: ${{ github.workspace }}/docs/RISC-V-Trace-Control-Interface.pdf
        retention-days: 30

    - name: Upload RISC-V-Trace-Connectors PDF
      uses: actions/upload-artifact@v3
      with:
        name: RISC-V-Trace-Connectors
        path: ${{ github.workspace }}/docs/RISC-V-Trace-Connectors.pdf
        retention-days: 30

    - name: Upload RISC-V-N-Trace PDF
      uses: actions/upload-artifact@v3
      with:
        name: RISC-V-N-Trace
        path: ${{ github.workspace }}/docs/RISC-V-N-Trace.pdf
        retention-days: 30

    - name: Get short SHA
      id: short-sha
      run: echo "SHORT_SHA=$(git rev-parse --short=4 HEAD)" >> $GITHUB_ENV
      
    # Step 5:Create Release
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ github.workspace }}/*.pdf
        tag_name: v${{ env.SHORT_SHA }}
        name: Release ${{ env.SHORT_SHA }}
        draft: ${{ github.event.inputs.draft }}
        prerelease: ${{ github.event.inputs.prerelease }}
      env:
        GITHUB_TOKEN: ${{ secrets.GHTOKEN }}
      if: github.event_name == 'workflow_dispatch' 
